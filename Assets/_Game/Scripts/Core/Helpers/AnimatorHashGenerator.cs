using UnityEditor;
using UnityEngine;
using System.IO;
using System.Text;

namespace _Game.Scripts.Core.Helpers
{
    
    public static class AnimatorHashGenerator
    {
        [MenuItem("Tools/Generate Animator Hashes")]
        public static void Generate()
        {
            // Adjust this to where you want the generated file
            string outputPath = "Assets/Scripts/Generated/AnimatorHashes.cs";

            var sb = new StringBuilder();
            sb.AppendLine("// Auto-generated by AnimatorHashGenerator");
            sb.AppendLine("public static class AnimatorHashes");
            sb.AppendLine("{");

            // Find all AnimatorControllers in the project
            var guids = AssetDatabase.FindAssets("t:AnimatorController");
            foreach (var guid in guids)
            {
                string path = AssetDatabase.GUIDToAssetPath(guid);
                var controller = AssetDatabase.LoadAssetAtPath<UnityEditor.Animations.AnimatorController>(path);

                sb.AppendLine($"\tpublic static class {controller.name}");
                sb.AppendLine("\t{");

                foreach (var layer in controller.layers)
                {
                    string layerName = layer.name.Replace(" ", "_");

                    foreach (var state in layer.stateMachine.states)
                    {
                        string stateName = state.state.name.Replace(" ", "_");

                        string fullPath = $"{layer.name}.{state.state.name}";
                        int hash = Animator.StringToHash(fullPath);

                        sb.AppendLine($"\t\tpublic const int {layerName}_{stateName} = {hash};");
                    }
                }

                sb.AppendLine("\t}");
            }

            sb.AppendLine("}");

            Directory.CreateDirectory(Path.GetDirectoryName(outputPath));
            File.WriteAllText(outputPath, sb.ToString());

            AssetDatabase.Refresh();
            Debug.Log("AnimatorHashes.cs generated at " + outputPath);
        }
    }

}